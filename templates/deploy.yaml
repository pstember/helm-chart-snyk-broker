apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ .Values.name }}
{{- if .Values.deployment.labels }}
{{ toYaml .Values.deployment.labels | indent 4 }}
{{- end }}
{{- if .Values.deployment.annotations }}
  annotations:
{{ toYaml .Values.deployment.annotations | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  strategy:
    rollingUpdate:
      maxSurge: 20%
      maxUnavailable: 20%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      containers:
      - name: {{ .Values.name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.targetPort }}
          protocol: TCP
        resources:
{{ toYaml .Values.resources | indent 10 }}
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: {{ .Values.service.targetPort }}
          initialDelaySeconds: 5
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: {{ .Values.service.targetPort }}
          initialDelaySeconds: 5
          periodSeconds: 5
        env:
        - name: BROKER_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.broker.secretName }}
              key: {{ .Values.broker.secretKey }}
        - name: CR_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.cr.secretName }}
              key: {{ .Values.cr.secretKey }}
        - name: CR_AGENT_URL
          value: {{ .Values.cr.url }}
        - name: BROKER_CLIENT_URL
          value: {{ .Values.broker.url }}
        - name: PORT
          value: "{{ .Values.service.targetPort }}"
{{- if .Values.ca }}
        - name: CA_CERT
          value: {{ .Values.ca }}
{{- end }}
